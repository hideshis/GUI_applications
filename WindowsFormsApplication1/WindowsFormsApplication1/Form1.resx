<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhggCCAPcAAAAAAAMDAwYGBgcHBwwMDBMTEx0dHSgoKDU1NTk5OUFBQUZGRkxMTFNTU1paWmJi
        Ymtra3R0dIWFhYuLi5KSkpqamqqqqrS0tL29vcfHx8zMzNPT09vb2+Tk5Ozs7Pb29v///wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJFAAgACwAAAAAggCCAAAI/gBBCBxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bNmzhz6tzJs6fPn0CDCh1KtKjR
        o0iTKl3KtKnTp1CjSp1KtarVq1izat3KtatXgh0iFABAtqzZs2ULOLDwFaGHB2PRyp1rtkCDDm3fxqXL
        ty8Au3ix6vVL2G8BDlc7HCjMuC+Bu1M9RAgwd8CEDwT1Aj6I4QEBw4ihQtiLlsAFgw7MKlioYQHfw08j
        zEWAIeFnsxA1DCj9wAPTDpTPml6o4GzE1nIXKB1sNsBlhhuMS9SNlu1RD4vP0n4offpuswR6/hf1wKA0
        Zu64IVJQ8OAD8rPKh3pwfTbAaYjdG0oo+0AgArQMBAZUatrVFlF+CwGX3gbfmXWAbz69FVxaFCGYEHZ1
        DfSeWfH1RKBZAtwnkYUHYWjWBAX9d1aAPTVYFgGhjZjeQg8Id95AHZBG1mo8zQVbRB6QaJCL9h20gQFo
        CYhTkD5uEFGNM154logHqVgWjzlBSZcDSi7kYocJQSAkjhOSFeNNLibgIlk/MnSWgQkpWBaYCBVX15k1
        vUndWW0qNOZAYpYVAJwJbaCjAzlJpwGSfOJ50J8C3UYWig1lUGYAiUZZwZqPdVkQpCCcdeNCH5ZlnU0I
        7qman1Ee1AGo/gOtCQACOFmoalms4nphdmw6xCRatbYq0K0AtIfQn1pO2pCJ1d0kpAZlAkDnQGN64CIB
        oyaUrHbOCjtQec05Gqq3IDBLFpUJTcZXt7oexAGvZCHgqZATwNeQbMLBqhKkVrKJp5B2kjUoQxxEe8C4
        ZXkKE6QbRNtnmQgFCkCRCkkWLQEaILwjquQSFHBZiA4UcAEIcVDedhXDSxYE50XLcbuFMiooQUcCMJxF
        iqFVwI0fA/AyWQ5Ba9apG6nbKM36opQ0uPF2hG9zz33acUtJW5B0Q3IKii61U7N0dZlEW2SuzVtzDbNM
        VzM9a0bkncVyrkDnaZa4CFnd9bIqY7vQ/tUmlRmyQ1YefFG9U7p5t0ofY/rQfH/RDVHPJBt+dkzRzc2S
        xGQ3xHffZv2dksmzErr34Yg399OrpKdUeVmO14R55DaV2SdOWQNAqU2Qtx4T5nrfxODRN73l4u03Edup
        TaWSla1NxDZOk7X28tT8X5C91HZzouc0PQAHKGwSc2llr9OGwKfEOFri89RzWrpzBD6fRNUs1+wevV9a
        2UDJD171HuVMFwHpG0rzsHSRzujof/grSvP4tzi4NCZeATxK8+hHqgeiTCqL0ln7CCKrudzMKr87i+ck
        xxcCRA0r5JsYfs4ygLW0RUNX25xVYpi6rNBwci/UmM/Qg8MX3jBubjkkyA93GESzAVFzNUzMEIsIqAzx
        8IhBlJTtFidDqojKVypjYrn0db0kVmVby6KPE4v4pYYkL3NMfFNDpPgXLQpEXx8bQAK/ArGGyO+DWhyZ
        Gy1SMzzu8Y+ADKQgB0nIQhrykIhMpCIXychGDjIgACH5BAkUACIALAAAAACCAIIAhwAAAAICAgMDAwQE
        BAcHBwsLCwwMDBMTEx0dHSgoKDU1NTk5OUFBQUJCQkZGRkxMTFNTU1RUVFpaWmJiYmtra3R0dIWFhYuL
        i5qamqqqqrS0tL29vczMzNPT09vb2+Tk5Ozs7Pb29v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>